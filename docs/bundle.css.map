{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../node_modules/fa-svelte/src/Icon.html",
    "../src/CharacterMapping.svelte",
    "../src/ResultCharacters.svelte",
    "../src/ResultNumber.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n    import { fade, crossfade } from 'svelte/transition';\n    import { quintOut } from 'svelte/easing';\n    import { flip } from 'svelte/animate';\n    import Icon from 'fa-svelte'\n    import { faMapPin } from '@fortawesome/free-solid-svg-icons/faMapPin'\n    import { faTrashAlt } from '@fortawesome/free-solid-svg-icons/faTrashAlt'\n    import CharacterMapping from './CharacterMapping.svelte';\n    import Result from './Result.svelte';\n\n    export let version;\n\n    let name = \"\";\n    let numberMapping;\n    let mappingNumbers;\n    let charMap;\n    let selectedMapping = \"Chaldean\";\n    let showMapping = false;\n\n    let uid = 0;\n    let results = [freshResult()];\n\n    $: {\n        const resultIndex = results.findIndex(r => r.id === uid - 1);\n        results[resultIndex].name = name;\n\n        switch (selectedMapping) {\n            case \"Chaldean\":\n                numberMapping = {\n                    1: [\"a\", \"i\", \"j\", \"q\", \"y\"],\n                    2: [\"b\", \"k\", \"r\"],\n                    3: [\"c\", \"g\", \"l\", \"s\"],\n                    4: [\"d\", \"m\", \"t\"],\n                    5: [\"e\", \"h\", \"n\", \"x\"],\n                    6: [\"u\", \"v\", \"w\"],\n                    7: [\"o\", \"z\"],\n                    8: [\"f\", \"p\"]\n                }\n                break;\n            case \"Phytagorean\":\n                numberMapping = {\n                    1: [\"a\", \"j\", \"s\"],\n                    2: [\"b\", \"k\", \"t\", \"ö\", \"ß\"],\n                    3: [\"c\", \"l\", \"u\"],\n                    4: [\"d\", \"m\", \"v\"],\n                    5: [\"e\", \"n\", \"w\"],\n                    6: [\"f\", \"o\", \"x\", \"ä\"],\n                    7: [\"g\", \"p\", \"y\"],\n                    8: [\"h\", \"q\", \"z\", \"ü\"],\n                    9: [\"i\", \"r\"]\n                }\n                break;\n            default:\n                alert(\"No mapping defined for \" + selectedMapping);\n        }\n\n        mappingNumbers = Object.keys(numberMapping).reduce((newObject, number) => {\n            newObject[number] = [];\n            return newObject;\n        }, {});\n\n        charMap = new Map(Object.keys(numberMapping).flatMap(function (key) {\n            return numberMapping[key].map(char => [char, Number(key)])\n        }));\n    }\n\n    const [send, receive] = crossfade({\n        duration: d => Math.sqrt(d * 2000),\n\n        fallback(node, params) {\n            const style = getComputedStyle(node);\n            const transform = style.transform === 'none' ? '' : style.transform;\n\n            return {\n                duration: 600,\n                easing: quintOut,\n                css: t => `\n\t\t\t\t\ttransform: ${transform} scale(${t});\n\t\t\t\t\topacity: ${t}\n\t\t\t\t`\n            };\n        }\n    });\n\n    let pinnedResults = [];\n    let inputElement;\n    function pinResult() {\n        if (name !== \"\") {\n            const resultToPin = results.filter(r => !r.pinned)[0];\n            resultToPin.pinned = true;\n            results = [...results, freshResult()];\n            name = \"\";\n        }\n        inputElement.focus();\n    }\n\n    function removeResult(result) {\n        results = results.filter(r => r !== result);\n    }\n\n    function freshResult() {\n        return { id: uid++, name, pinned: false };\n    }\n\n</script>\n\n<h1 class=\"centered\">Name Numerology Calculator</h1>\n\n<div class=\"centered\">\n    <div style=\"display:flex; flex-direction: row; justify-content: center; align-items: flex-start; flex-wrap:wrap\">\n        <input bind:this={inputElement} bind:value={name} type=\"text\" autofocus autocomplete=\"off\" autocorrect=\"off\"\n            autocapitalize=\"off\" spellcheck=\"false\" on:keydown={e=> e.which === 13 && pinResult()}/>\n        &nbsp;&nbsp;&nbsp;\n        <select bind:value={selectedMapping}>\n            <option value=\"Chaldean\">Chaldean</option>\n            <option value=\"Phytagorean\">Phytagorean</option>\n        </select>\n        &nbsp;&nbsp;&nbsp;\n        {#if showMapping}\n            <span class=\"fixedWidth\" on:click={()=>showMapping=!showMapping} in:fade=\"{{ duration: 200 }}\" >\n                <CharacterMapping {numberMapping} />\n            </span>\n        {:else}\n            <span class=\"fixedWidth\" on:click={()=>showMapping=!showMapping} in:fade=\"{{ duration: 200 }}\" >\n                <CharacterMapping numberMapping={mappingNumbers} />\n            </span>\n        {/if}\n    </div>\n    <hr />\n    <br/>\n\n    <div style=\"display:flex; flex-direction: row; justify-content: center\">\n        {#each results.filter(r => !r.pinned) as result (result.id)}\n            <label class=\"card\" in:receive=\"{{key: result.id}}\" out:send=\"{{key: result.id}}\" animate:flip>\n                <div class={name === \"\"? \"hidden\" : \"cardAction\"} on:click=\"{() => pinResult()}\">\n                    <Icon icon={faMapPin}/>\n                </div>\n                <Result name={result.name} {charMap} />\n            </label>\n        {/each}\n    </div>\n\n\n    {#if results.filter(r => r.pinned).length > 0}\n        <h3 in:fade style=\"margin-top: 60px\">Pinned Items</h3>\n        <div class=\"cardContainer\">\n            {#each results.filter(r => r.pinned) as result (result.id)}\n                <label class=\"card\" in:receive=\"{{key: result.id}}\" out:send=\"{{key: result.id}}\" animate:flip>\n                    <div class=\"cardAction\" on:click=\"{() => removeResult(result)}\">\n                        <Icon icon={faTrashAlt}/>\n                    </div>\n                    <Result name={result.name} {charMap} />\n                    <br />\n                </label>\n            {/each}\n        </div>\n    {/if}\n\n    <div class=\"footer\">\n        <a href=\"https://github.com/jzillmann/nanuca\">Nanuca {version}</a>\n    </div>\n</div>\n\n<style>\n    /*Keep all other flexbox elements stable when showing the mapping*/\n    .fixedWidth {\n        width: 132px;\n        text-align: left;\n    }\n\n    td {\n        color: var(--color4);\n    }\n\n    h3 {\n        color: var(--color3);\n    }\n\n    .colored {\n        color: red;\n    }\n\n    .left {\n        text-align: left;\n    }\n\n    .right {\n        text-align: right;\n    }\n\n    .cardContainer {\n        display:flex;\n        flex-direction: row;\n        flex-wrap:wrap;\n        justify-content: center;\n    }\n\n    .card {\n        box-shadow: 0 4px 8px 0 var(--color3);\n        transition: 0.3s;\n        border-radius: 2px;\n        padding: 20px;\n        margin: 0 15px 15px;\n        min-height: 85px;\n        min-width: 145px;\n    }\n\n    .hidden {\n        visibility: collapse;\n    }\n\n\n    .cardAction {\n        position: relative;\n        float: right;\n        top: -12px;\n        right: -15px;\n        color: var(--color3);\n    }\n\n</style>",
    "<svg\r\n  aria-hidden=\"true\"\r\n  class=\"{classes}\"\r\n  role=\"img\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  viewBox=\"{viewBox}\"\r\n>\r\n  <path fill=\"currentColor\" d=\"{path}\" />\r\n</svg>\r\n<script>\r\n  export let icon;\r\n\r\n  let path = [];\r\n  let classes = \"\";\r\n  let viewBox = \"\";\r\n\r\n  $: viewBox = \"0 0 \" + icon.icon[0] + \" \" + icon.icon[1];\r\n\r\n  $: classes = \"fa-svelte \" + ($$props.class ? $$props.class : \"\");\r\n\r\n  $: path = icon.icon[4];\r\n</script>\r\n\r\n<style>\r\n  .fa-svelte {\r\n    width: 1em;\r\n    height: 1em;\r\n    overflow: visible;\r\n    display: inline-block;\r\n  }\r\n</style>",
    "<script>\n    export let numberMapping;\n\n    $: maxCharCount = Object.keys(numberMapping).reduce((max, number) => Math.max(max, numberMapping[number].length), 0);\n</script>\n\n<style>\n    table {\n        color: var(--color3);\n        padding: 0.1em\n    }\n    \n    table:hover {\n        cursor: pointer;\n    }\n    \n    td {\n        color: var(--color4);\n    }\n</style>\n\n<table>\n    <tr>\n        {#each Object.keys(numberMapping) as number}\n            <th>{number}</th>\n        {/each}\n    </tr>\n    {#each [...Array(maxCharCount).keys()] as row}\n    <tr>\n        {#each Object.values(numberMapping) as mapping}\n            <td>{mapping[row] || \"\"}</td>\n        {/each}\n    </tr>\n    {/each}\n</table>",
    "<script>\n    import ResultNumber from './ResultNumber.svelte';\n\n    export let chars;\n    export let charNumbers;\n    export let partCount;\n\n    function highlightElements(elementId) {\n        var elements = document.getElementsByClassName(elementId);\n        var n = elements.length;\n        for (var i = 0; i < n; i++) {\n            elements[i].classList.add(\"highlighted\");\n        }\n    }\n\n    function lowlightElements(elementId) {\n        var elements = document.getElementsByClassName(elementId);\n        var n = elements.length;\n        for (var i = 0; i < n; i++) {\n            elements[i].classList.remove(\"highlighted\");\n        }\n    }\n</script>\n\n<style>\n    table {\n        border-bottom: 1pt solid var(--color3);\n    }\n    \n    .highlighted {\n        background-color: var(--color3);\n    }\n</style>\n\n<div>\n    <table>\n        <tr>\n            {#each chars as char }\n                <td class={\"char_\"+char } \n                    on:mouseover={ ()=> highlightElements(\"char_\"+char)}\n                    on:mouseout={ ()=> lowlightElements(\"char_\"+char)}\n                >{char}\n                </td>\n            {/each}\n        </tr>\n        <tr>\n            {#each charNumbers as charNumber}\n                {#if isNaN(charNumber)}\n                    <td>?</td>\n                {:else}\n                    <td class={\"num_\"+charNumber }\n                        on:mouseover={ ()=> highlightElements(\"num_\"+charNumber)}\n                        on:mouseout={ ()=> lowlightElements(\"num_\"+charNumber)}\n                    >{charNumber}\n                </td>\n                {/if}\n            {/each}\n        </tr>\n    </table>\n    {#if partCount >1}\n        <br/>\n        <ResultNumber numbers={charNumbers} />\n    {/if}\n</div>",
    "<script>\n    export let numbers;\n    let crossfoots = [];\n    $: {\n        crossfoots = [];\n        let currentCrossfootNumbers = numbers.filter(number => !isNaN(number));\n        do {\n            let nextCrossfoot = calculateCrossfoot(currentCrossfootNumbers);\n            crossfoots = [...crossfoots, nextCrossfoot];\n            currentCrossfootNumbers = nextCrossfoot.toString().split(\"\").map(singleNumber => Number(singleNumber));\n        } while (currentCrossfootNumbers.length > 1);\n    }\n\n    function calculateCrossfoot(numberArray) {\n        return numberArray.reduce((sum, number) => sum + number, 0);\n    }\n\n</script>\n\n<style>\n    div {\n        color: var(--color4);\n    }\n\n    .underlined {\n        border-bottom: 1pt solid var(--color4);\n    }\n</style>\n\n<div>\n    {#each crossfoots as crossfoot, i}\n        {#if i>0}\n            {' / '}\n        {/if}\n        {#if i==crossfoots.length-1 && i >0}\n            <b class=\"underlined\">{crossfoot}</b>\n        {:else if crossfoot!=0}\n            <b>{crossfoot}</b>\n        {/if}\n    {/each}\n</div>"
  ],
  "names": [],
  "mappings": "AAsKI,WAAW,cAAC,CAAC,AACT,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,IAAI,AACpB,CAAC,AAMD,EAAE,cAAC,CAAC,AACA,KAAK,CAAE,IAAI,QAAQ,CAAC,AACxB,CAAC,AAcD,cAAc,cAAC,CAAC,AACZ,QAAQ,IAAI,CACZ,cAAc,CAAE,GAAG,CACnB,UAAU,IAAI,CACd,eAAe,CAAE,MAAM,AAC3B,CAAC,AAED,KAAK,cAAC,CAAC,AACH,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CACrC,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CACnB,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,KAAK,AACpB,CAAC,AAED,OAAO,cAAC,CAAC,AACL,UAAU,CAAE,QAAQ,AACxB,CAAC,AAGD,WAAW,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,KAAK,CACZ,GAAG,CAAE,KAAK,CACV,KAAK,CAAE,KAAK,CACZ,KAAK,CAAE,IAAI,QAAQ,CAAC,AACxB,CAAC;ACnMH,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,OAAO,CACjB,OAAO,CAAE,YAAY,AACvB,CAAC;ACtBC,KAAK,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,QAAQ,CAAC,CACpB,OAAO,CAAE,KAAK;IAClB,CAAC,AAED,oBAAK,MAAM,AAAC,CAAC,AACT,MAAM,CAAE,OAAO,AACnB,CAAC,AAED,EAAE,eAAC,CAAC,AACA,KAAK,CAAE,IAAI,QAAQ,CAAC,AACxB,CAAC;ACOD,KAAK,eAAC,CAAC,AACH,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,AAC1C,CAAC,AAED,YAAY,eAAC,CAAC,AACV,gBAAgB,CAAE,IAAI,QAAQ,CAAC,AACnC,CAAC;ACXD,GAAG,eAAC,CAAC,AACD,KAAK,CAAE,IAAI,QAAQ,CAAC,AACxB,CAAC,AAED,WAAW,eAAC,CAAC,AACT,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,AAC1C,CAAC"
}